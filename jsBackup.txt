cordova.define("com.matd.coolplugin.CoolPlugin", function(require, exports, module) { var exec = require('cordova/exec');


var conferenceID;

function CoolPlugin() { 
 console.log("CoolPlugin.js: is created");
}



    // baseCallbackContext
CoolPlugin.prototype.regUser = function(){

exec(function(result){

    //if we recieve some conversation dat–∞
     if(isJsonString(result)){


         var eventInfo = JSON.parse(result);


         if(eventInfo.type == "invite"){

             conferenceID = eventInfo.conferenceID;

             if (confirm("User:" + eventInfo.initiator + "\n is inviting you") == true) {



                 exec(function(result){

                         alert(result);

                     },
                     function(result){
                         alert(result);
                     },"CoolPlugin","JOIN_ROOM",[conferenceID]);


             } else {

                 alert("You can always call back with join button");

             }



         }else if(eventInfo.type == "leave"){


             alert(eventInfo.leaver + " left the conversation");


         }



     }else{


         alert(result);

     }

   },
  function(result){

    alert(result);

  },"CoolPlugin","REGISTER",[]);

};

function isJsonString(str) {
    try {
        JSON.parse(str);
    } catch (e) {
        return false;
    }
    return true;
}


CoolPlugin.prototype.createRoom = function(){

exec(function(result){

        alert(result);


    },
    function(result){
        alert(result);
    },"CoolPlugin","CREATE_ROOM",[]);

};

CoolPlugin.prototype.joinRoom = function(){

    exec(function(result){

            alert(result);


        },
        function(result){
            alert(result);
        },"CoolPlugin","JOIN_ROOM",[conferenceID]);

};


    

CoolPlugin.prototype.hangCall = function(){

    exec(function(result){
            alert(result);
        },
        function(result){
            alert(result);
        },"CoolPlugin","HANG",[]);
};
    


CoolPlugin.prototype.destroyClient = function(){

    exec(function(result){

            alert(result);

        },
        function(result){

            alert(result);
        },"CoolPlugin","DESTROY",[]);

};
    

 var coolPlugin = new CoolPlugin();
 module.exports = coolPlugin;

});

